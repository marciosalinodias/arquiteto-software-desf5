// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  telefone  String?
  endereco  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  pedidos Pedido[]

  @@map("clientes")
}

model Produto {
  id          String   @id @default(uuid())
  nome        String
  descricao   String?
  preco       Decimal  @db.Decimal(10, 2)
  estoque     Int      @default(0)
  categoria   String?
  ativo       Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relacionamentos
  itensPedido ItemPedido[]

  @@map("produtos")
}

model Pedido {
  id         String   @id @default(uuid())
  clienteId  String
  status     String   @default("PENDENTE") // PENDENTE, APROVADO, CANCELADO, ENTREGUE
  total      Decimal  @db.Decimal(10, 2) @default(0)
  observacao String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relacionamentos
  cliente     Cliente       @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  itensPedido ItemPedido[]

  @@map("pedidos")
}

model ItemPedido {
  id        String  @id @default(uuid())
  pedidoId  String
  produtoId String
  quantidade Int
  precoUnitario Decimal @db.Decimal(10, 2)
  subtotal  Decimal @db.Decimal(10, 2)

  // Relacionamentos
  pedido  Pedido  @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  produto Produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)

  @@map("itens_pedido")
}
